Joshua Lee
Roller Coaster in OpenGL

ENVIRONMENT:
	I use the same skybox as from the heightmap.
ROLLERCOASTER TRACK:
	1. Appearance:
		The track is a rainbow road! It responds to diffuse, ambient, and specular lighting, since I set appropriate values using glMaterialfv.
	2. File types:
		The track is generated using the splines file type.
	3. Interpolation:
		The track is generated by interpolating over the control points dictated by spline files.
CAMERA MOTION:
	1. Physics:
		The camera speed depends on height, with an equation similar to v^2 = kh, where k is some conversion factor. Using a variable conversion factor allows me to adjust the equation depending on max and min heights, so that v will always be ~0 at max height and ~maxVelocity at min height, regardless of which roller coaster is used.
	2. Moving the camera:
		The camera follows the roller coaster using the same points generated during interpolation.
		
EXTRA CREDIT:
	1. Color schemes:
		Lighting color schemes (ambient) can be cycled by hitting "tab" key. Schemes are as follows:
			a. "Normal" - Lighting is white
			b. "Red" - Red colors show brightly, while others are darker.
			c. "Green" - As above, but green.
			d. "Blue" - As above, but blue.
			e. "Specular" - Ambient lighting is off, and colors are drained. This mode is useful for clearly seeing effects of specular lighting.

VIDEO DESCRIPTION:
	Please note that for some reason, the video is very slow, compared to the actual running time.
	Begins by going up. You can see it gets much slower as it reaches the peak. Going down, it speeds up.
	I begin cycling through color cycles during the drop. RED, GREEN, then BLUE. Finally, I use Specular scheme to show specular lighting more clearly. I end back in normal mode, climbing up.